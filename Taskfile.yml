rem-gen-code-project:
  cmds:
    - rm .\project\version.go &>/dev/null || echo >/dev/null
  status:
    - test ! -f project/version.go
  silent: true

add-gen-code-project:
  cmds:
    - task: rem-gen-code-project
    - echo "- Generating code needed on project..."
    - go generate {{ .REPO }}/project
  sources:
    - project/gen_version.go
    - version
  generates:
    - project/version.go
  method: checksum
  silent: true

add-gen-code:
  deps: [add-gen-code-project]
  desc: Generate code needed for the project.

build:
  deps: [add-gen-code]
  cmds:
    - echo "- Building doni..."
    - go build
  sources:
    - /**/*.go
  generates:
    - doni{{ exeExt }}
  method: checksum
  silent: true
  desc: Build doni executable.

install:
  deps: [add-gen-code]
  cmds:
    - echo "Installing doni..."
    - go install
  sources:
    - /**/*.go
  generates:
    - /{{ .GOPATH }}/bin/doni{{ exeExt }}
  method: checksum
  silent: true
  desc: Install doni program.

test-project:
  deps: [add-gen-code-project]
  cmds:
    - echo "- Testing project package..."
    - go test -v {{ .REPO }}/project
  silent: true

test:
  deps: [test-project]
  desc: Execute the tests on project.

fetch-gometalinter:
  cmds:
    - go get github.com/alecthomas/gometalinter
  status:
    - test -f {{ .GOPATH }}/bin/gometalinter{{ exeExt }}
  silent: true

install-linters:
  deps: [fetch-gometalinter]
  cmds:
    - gometalinter --install --update
  status:
    - test -f {{ .GOPATH }}/bin/lll{{ exeExt }}
  silent: true
  desc: Install linter tools.
  
lint-lll:
  deps: [install-linters]
  cmds:
    - echo "- Checking line length on project."
    - lll -g -l {{ .LINE_LENGTH }} .
  silent: true
  desc: Check line lenght on project.
